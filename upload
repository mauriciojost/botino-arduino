#!/usr/bin/env bash

set -e
set -x

while getopts p:Wtm option
do
  case "${option}"
  in
    p) PROFILE=${OPTARG};;
    W) DONT_UPLOAD_FIRMWARE=true;;
    t) UPLOAD_FS=true;;
    m) MONITOR=true;;
    v) PLATFORMIO_RUN_PARAMS="-v";;
  esac
done

if [ -z "$PROFILE" ]
then
  echo "Variable -p PROFILE is mandatory"
  exit 1
fi

COMMIT_ID=`git rev-parse --short HEAD`
LOG_DIR=images

echo "### Using profile $PROFILE..."
export PLATFORMIO_BUILD_FLAGS="-D PROJ_VERSION=$COMMIT_ID `cat $PROFILE | grep -v '^#'`" 

echo "### Compiling..."
platformio run $PLATFORMIO_RUN_PARAMS

if [ -z "$DONT_UPLOAD_FIRMWARE" ]
then

  echo "### Will upload firmware..."

  echo "### Checking if no changes to be committed..."
  git diff --exit-code

  echo "### Uploading..."
  platformio run --target upload

  echo "### Backing up image..."
  mkdir -p $LOG_DIR/$COMMIT_ID/
  rm -f $LOG_DIR/$COMMIT_ID/*
  echo "### Backing up logs..."
  find . -name *.elf | xargs -I% cp -f % $LOG_DIR/$COMMIT_ID/

fi

if [ -n "$UPLOAD_FS" ]
then
  echo "### Will upload tuning to file-system..."
  PROFILE_BASE="${PROFILE%.*}"
  TUNING_PATH="$PROFILE_BASE-tuning"
  rm -fr data
  ln -s `readlink -e $TUNING_PATH` data
  echo "### Uploading $TUNING_PATH"
  platformio run --target buildfs
  platformio run --target uploadfs
fi


if [ -n "$MONITOR" ]
then
  echo "### Monitoring..."
  { ./serial_monitor 0 > >(tee $LOG_DIR/$COMMIT_ID/stdout.txt ); } 2> >(tee $LOG_DIR/$COMMIT_ID/stderr.txt )
fi

echo "Done."


